name: Docker Image CI

on:
  
  pull_request:
    branches: [reusable]
  workflow_dispatch:
    inputs:
      env:
        required: true
jobs:
  Git-Checkout:
    uses: ./.github/workflows/checkout.yml
  build:
    runs-on: ubuntu-latest
     
    steps:
    - name: Docker Login
      uses: docker/login-action@v2
      with:
        registry: docker.io
        username: ${{ secrets.DOCKER_USER}}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: omair095/azure_vote_app_${{ github.event.inputs.env }}:${{github.run_number}}
       
  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
 
    - name: Docker Image Updated in Dev Yaml File
      if: ${{ github.event.inputs.env  == 'dev' }}
      uses: cschleiden/replace-tokens@v1
      with:
        tokenPrefix: __
        tokenSuffix: __
        files: '["Kubernetes_dev/kubernetes_dev.yaml"]'
      env:
        DOCKER_REGISTRY: omair095
        IMAGE_NAME: azure_vote_app_${{ github.event.inputs.env }}
        IMAGE_TAG: ${{github.run_number}}

    - name: Docker Image Updated in Prod Yaml File
      if: ${{ github.event.inputs.env  == 'prod' }}
      uses: cschleiden/replace-tokens@v1
      with:
        tokenPrefix: __
        tokenSuffix: __
        files: '["Kubernetes/kubernetes.yaml"]'
      env:
        DOCKER_REGISTRY: omair095
        IMAGE_NAME: azure_vote_app_${{ github.event.inputs.env }}
        IMAGE_TAG: ${{github.run_number}}
      
    
